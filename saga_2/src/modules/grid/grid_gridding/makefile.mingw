# Project: grid_gridding
# MinGW Makefile
# Created by O. Conrad

PRJ_NAME = grid_gridding
BIN_SAGA = $(SAGA)\bin\saga_mingw
TMP_SAGA = $(SAGA)\bin\tmp\saga_mingw
MLB_TEMP = $(TMP_SAGA)\$(PRJ_NAME)
MLB_PATH = $(BIN_SAGA)\modules
MLB_NAME = $(MLB_PATH)\$(PRJ_NAME).dll
LIB_NAME = $(MLB_PATH)\lib$(PRJ_NAME).a

CPP      = g++.exe
LD       = dllwrap.exe

DEP_INCS = 
DEP_DEFS = 
DEP_LIBS = 
DEP_LFLG = 

OBJ      = $(MLB_TEMP)/Interpolation.o $(MLB_TEMP)/Interpolation_InverseDistance.o $(MLB_TEMP)/Interpolation_NaturalNeighbour.o $(MLB_TEMP)/Interpolation_NearestNeighbour.o $(MLB_TEMP)/Interpolation_Shepard.o $(MLB_TEMP)/Interpolation_Triangulation.o $(MLB_TEMP)/MLB_Interface.o $(MLB_TEMP)/Shapes2Grid.o $(MLB_TEMP)/Shepard.o $(MLB_TEMP)/delaunay.o $(MLB_TEMP)/hash.o $(MLB_TEMP)/istack.o $(MLB_TEMP)/lpi.o $(MLB_TEMP)/nnai.o $(MLB_TEMP)/nncommon.o $(MLB_TEMP)/nnpi.o $(MLB_TEMP)/triangle.o

CXXFLAGS = -I"$(MINGW)/include" -I"$(SAGA)/src/saga_core" -D$(PRJ_NAME)_EXPORTS -DBUILDING_DLL=1 -D_SAGA_MSW -D_SAGA_MINGW -D_TYPEDEF_BYTE -D_TYPEDEF_WORD -fexpensive-optimizations -Os -O2 -O3 $(DEP_INCS) $(DEP_DEFS)

LIBS     = -L"$(MINGW)/lib" -L"$(WXWIN)/lib/gcc_lib" $(DEP_LIBS) $(BIN_SAGA)/libsaga_api.a
LDFLAGS  = --no-export-all-symbols --add-stdcall-alias --driver-name c++ $(DEP_LFLG)

.PHONY: all all-before all-after clean clean-custom

all: all-before $(MLB_NAME) all-after

clean: clean-custom
	rm -f $(OBJ) $(MLB_NAME)

$(TMP_SAGA):
	if not exist $(TMP_SAGA) mkdir $(TMP_SAGA)

$(MLB_TEMP): $(TMP_SAGA)
	if not exist $(MLB_TEMP) mkdir $(MLB_TEMP)

$(MLB_PATH):
	if not exist $(MLB_PATH) mkdir $(MLB_PATH)

$(MLB_NAME): $(MLB_PATH) $(MLB_TEMP) $(OBJ)
	$(LD) $(LDFLAGS) --implib $(LIB_NAME) $(OBJ) $(LIBS) -o $(MLB_NAME)


$(MLB_TEMP)/Interpolation.o: ./Interpolation.cpp
	$(CPP) -c ./Interpolation.cpp -o $(MLB_TEMP)/Interpolation.o $(CXXFLAGS)

$(MLB_TEMP)/Interpolation_InverseDistance.o: ./Interpolation_InverseDistance.cpp
	$(CPP) -c ./Interpolation_InverseDistance.cpp -o $(MLB_TEMP)/Interpolation_InverseDistance.o $(CXXFLAGS)

$(MLB_TEMP)/Interpolation_NaturalNeighbour.o: ./Interpolation_NaturalNeighbour.cpp
	$(CPP) -c ./Interpolation_NaturalNeighbour.cpp -o $(MLB_TEMP)/Interpolation_NaturalNeighbour.o $(CXXFLAGS)

$(MLB_TEMP)/Interpolation_NearestNeighbour.o: ./Interpolation_NearestNeighbour.cpp
	$(CPP) -c ./Interpolation_NearestNeighbour.cpp -o $(MLB_TEMP)/Interpolation_NearestNeighbour.o $(CXXFLAGS)

$(MLB_TEMP)/Interpolation_Shepard.o: ./Interpolation_Shepard.cpp
	$(CPP) -c ./Interpolation_Shepard.cpp -o $(MLB_TEMP)/Interpolation_Shepard.o $(CXXFLAGS)

$(MLB_TEMP)/Interpolation_Triangulation.o: ./Interpolation_Triangulation.cpp
	$(CPP) -c ./Interpolation_Triangulation.cpp -o $(MLB_TEMP)/Interpolation_Triangulation.o $(CXXFLAGS)

$(MLB_TEMP)/MLB_Interface.o: ./MLB_Interface.cpp
	$(CPP) -c ./MLB_Interface.cpp -o $(MLB_TEMP)/MLB_Interface.o $(CXXFLAGS)

$(MLB_TEMP)/Shapes2Grid.o: ./Shapes2Grid.cpp
	$(CPP) -c ./Shapes2Grid.cpp -o $(MLB_TEMP)/Shapes2Grid.o $(CXXFLAGS)

$(MLB_TEMP)/Shepard.o: ./Shepard.cpp
	$(CPP) -c ./Shepard.cpp -o $(MLB_TEMP)/Shepard.o $(CXXFLAGS)

$(MLB_TEMP)/delaunay.o: ./nn/delaunay.c
	$(CPP) -c ./nn/delaunay.c -o $(MLB_TEMP)/delaunay.o $(CXXFLAGS)

$(MLB_TEMP)/hash.o: ./nn/hash.c
	$(CPP) -c ./nn/hash.c -o $(MLB_TEMP)/hash.o $(CXXFLAGS)

$(MLB_TEMP)/istack.o: ./nn/istack.c
	$(CPP) -c ./nn/istack.c -o $(MLB_TEMP)/istack.o $(CXXFLAGS)

$(MLB_TEMP)/lpi.o: ./nn/lpi.c
	$(CPP) -c ./nn/lpi.c -o $(MLB_TEMP)/lpi.o $(CXXFLAGS)

$(MLB_TEMP)/nnai.o: ./nn/nnai.c
	$(CPP) -c ./nn/nnai.c -o $(MLB_TEMP)/nnai.o $(CXXFLAGS)

$(MLB_TEMP)/nncommon.o: ./nn/nncommon.c
	$(CPP) -c ./nn/nncommon.c -o $(MLB_TEMP)/nncommon.o $(CXXFLAGS)

$(MLB_TEMP)/nnpi.o: ./nn/nnpi.c
	$(CPP) -c ./nn/nnpi.c -o $(MLB_TEMP)/nnpi.o $(CXXFLAGS)

$(MLB_TEMP)/triangle.o: ./nn/triangle.c
	$(CPP) -c ./nn/triangle.c -o $(MLB_TEMP)/triangle.o $(CXXFLAGS)
